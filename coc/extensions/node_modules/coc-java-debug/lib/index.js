(()=>{"use strict";var e=[,e=>{e.exports=require("coc.nvim")},(e,t)=>{var s;Object.defineProperty(t,"__esModule",{value:!0}),t.Commands=void 0,(s=t.Commands||(t.Commands={})).JAVA_START_DEBUG_SESSION="vscode.java.startDebugSession",s.JAVA_DEBUG_VIMSPECTOR_START="java.debug.vimspector.start",s.EXECUTE_WORKSPACE_COMMAND="java.execute.workspaceCommand"}],t={};function s(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,s),a.exports}var o={};(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.activate=void 0;const t=s(1),r=s(2);async function a(...e){t.workspace.showMessage("Starting Java debug server...");const s=await t.commands.executeCommand(r.Commands.EXECUTE_WORKSPACE_COMMAND,r.Commands.JAVA_START_DEBUG_SESSION);t.workspace.showMessage(`Java debug server started on port: ${s}`);const o=t.workspace.getConfiguration("java.debug"),a=o.get("vimspector.profile"),n=o.get("vimspector.substitution.adapterPort"),i=function(e){let s="";if(0==e.length)s=e[0];else if(e.length>=1){const t=[];for(const s of e)t.push(s);s=t.join(" ")}return function(e){let s={};if(e)try{s=JSON.parse(e)}catch(s){t.workspace.showMessage(`Expected valid JSON for Vimspector settings, but got: ${e}`,"error")}return s}(s)}(e),c={};a&&(c.configuration=a);const u=Object.assign(Object.assign({[n]:s},c),i),v=JSON.stringify(u);return t.workspace.showMessage(`Launching Vimspector with settings: ${v}`),t.workspace.nvim.eval(`vimspector#LaunchWithSettings(${v})`)}e.activate=async function(e){return function(e){e.subscriptions.push(t.commands.registerCommand(r.Commands.JAVA_DEBUG_VIMSPECTOR_START,a))}(e),Promise.resolve()}})();var r=exports;for(var a in o)r[a]=o[a];o.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})})();